name: UMC Dev CI/CD # CI 스크립트 이름(이름 맘대로)

on: # 특정 브랜치에 머지되었을 때 CI/CD가 실행되도록
  pull_request:
    types: [closed]  # PR이 닫히고 머지가 되면 돌도록
  workflow_dispatch: # (2).수동 실행도 가능하도록

jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop' # develop 브랜치에 머지되었을 때 실행되도록 설정

    steps:
      - name: Checkout # 스벱의 이름: 아무거나 설정 가능
        uses: actions/checkout@v2 # (4).코드 check out: 빌드 대상이 되는 코드 가져오기 (깃허브에서 제공하는 actions/checkout@v2를 사용)
                                  # 기준: 이 리포지토리 최상단, .GITHUB 기준
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # (5).자바 설치
          distribution: 'adopt'

      - name: Grant execute permission for gradlew # 클라우드 컴퓨터에 gradlew에 대한 빌드 권한 주기
        run: chmod +x ./gradlew
        shell: bash # (6).권한 부여 (클라우드 컴퓨터에 이 프로젝트에 접근할 권한 부여)

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # (7).build시작

      - name: Get current time # 타임스탬프 찍기
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"# (8).build시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash # (9).확보한 시간 보여주기

      - name: Generate deployment package # 중요 :: 빌드된 파일들을 해당 경로에서 -> 배포 디렉토리에 복사 및 기타 설정
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile 
          cp -r .ebextensions-dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .


      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }} # 깃허브 환경변수에 추가 (AWS에서 IAM 사용자에 액세스 키 생성 후 복사)
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }} # 깃허브 환경변수에 추가
          application_name: project-dev
          environment_name: Project-dev-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false